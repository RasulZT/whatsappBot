import aiohttp


async def send_interactive_message_async(api_url, access_token, chat_id):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    :param api_url: str - URL API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :param access_token: str - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API.
    :param chat_id: str - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param text: str - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param buttons: list - –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫. –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏: "id" –∏ "title".
    """
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }

    data = {
        "type": "interactive",
        "recipient": {
            "chat_id": chat_id  # –£–∫–∞–∂–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
        },
        "message": {
            "type": "list",
            "text": "–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã. –¢–∞–∫–∂–µ –Ω–∞–ø–∏—Å–∞–≤ —Å–ª–æ–≤–æ <–ö–æ–º–∞–Ω–¥—ã> –≤ —á–∞—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üòä ",
            # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            "button": "–ö–æ–º–∞–Ω–¥—ã",  # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–ø–∏—Å–æ–∫
            "sections": [
                {
                    "title": "–î–ª—è –∑–∞–∫–∞–∑–∞",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "menu_open",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "title": "–ú–µ–Ω—é",  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "description": "–ó–∞–∫–∞–∂–∏—Ç–µ –≤–∫—É—Å–Ω—É—é –ø–∏—Ü—Ü—É"  # –û–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
                        },
                        {
                            "id": "order_info",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "title": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö",  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "description": ""  # –û–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
                        }
                    ]
                },
                {
                    "title": "–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "call_manager",
                            "title": "–ú—ç–Ω–µ–¥–∂–µ—Ä",
                            "description": ""
                        }
                    ]
                },
                {
                    "title": "–ü–æ–º–æ—â—å",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "help_commands",
                            "title": "–ö–æ–º–∞–Ω–¥—ã",
                            "description": "–ü–æ–∫–∞–∂–µ—Ç –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
                        }
                    ]
                }
            ]
        }
    }

    async with aiohttp.ClientSession() as session:
        print(api_url)
        print(chat_id)
        async with session.post(api_url, headers=headers, json=data) as response:
            if response.status == 200:
                print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                return await response.json()
            else:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –°—Ç–∞—Ç—É—Å: {response.status}")
                print(await response.text())
                return None


async def send_interactive_message_between_async(api_url, access_token, chat_id):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    :param api_url: str - URL API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :param access_token: str - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API.
    :param chat_id: str - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param text: str - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param buttons: list - –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫. –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏: "id" –∏ "title".
    """
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }

    data = {
        "type": "interactive",
        "recipient": {
            "chat_id": chat_id  # –£–∫–∞–∂–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
        },
        "message": {
            "type": "list",
            "text": "–î–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã:",  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            "button": "–ö–æ–º–∞–Ω–¥—ã",  # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–ø–∏—Å–æ–∫
            "sections": [
                {
                    "title": "–î–ª—è –∑–∞–∫–∞–∑–∞",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "menu_open",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "title": "–ú–µ–Ω—é",  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "description": "–ó–∞–∫–∞–∂–∏—Ç–µ –≤–∫—É—Å–Ω—É—é –ø–∏—Ü—Ü—É"  # –û–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
                        },
                        {
                            "id": "order_info",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "title": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö",  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "description": ""  # –û–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
                        }
                    ]
                },
                {
                    "title": "–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "call_manager",
                            "title": "–ú—ç–Ω–µ–¥–∂–µ—Ä",
                            "description": ""
                        }
                    ]
                },
                {
                    "title": "–ü–æ–º–æ—â—å",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "help_commands",
                            "title": "–ö–æ–º–∞–Ω–¥—ã",
                            "description": "–ü–æ–∫–∞–∂–µ—Ç –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
                        }
                    ]
                }
            ]
        }
    }

    async with aiohttp.ClientSession() as session:
        print(api_url)
        print(chat_id)
        async with session.post(api_url, headers=headers, json=data) as response:
            if response.status == 200:
                print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                return await response.json()
            else:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –°—Ç–∞—Ç—É—Å: {response.status}")
                print(await response.text())
                return None


async def send_interactive_message_end_async(api_url, access_token, chat_id):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    :param api_url: str - URL API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :param access_token: str - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API.
    :param chat_id: str - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param text: str - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param buttons: list - –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫. –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏: "id" –∏ "title".
    """
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }

    data = {
        "type": "interactive",
        "recipient": {
            "chat_id": chat_id  # –£–∫–∞–∂–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
        },
        "message": {
            "type": "list",
            "text": "üéâ –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω! \n –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä! üôå \n –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:",
            # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            "button": "–ö–æ–º–∞–Ω–¥—ã",  # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–ø–∏—Å–æ–∫
            "sections": [
                {
                    "title": "–î–ª—è –∑–∞–∫–∞–∑–∞",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "menu_open",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "title": "–ú–µ–Ω—é",  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "description": "–ó–∞–∫–∞–∂–∏—Ç–µ –≤–∫—É—Å–Ω—É—é –ø–∏—Ü—Ü—É"  # –û–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
                        },
                        {
                            "id": "order_info",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "title": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö",  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
                            "description": ""  # –û–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
                        }
                    ]
                },
                {
                    "title": "–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "call_manager",
                            "title": "–ú—ç–Ω–µ–¥–∂–µ—Ä",
                            "description": ""
                        }
                    ]
                },
                {
                    "title": "–ü–æ–º–æ—â—å",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    "rows": [
                        {
                            "id": "help_commands",
                            "title": "–ö–æ–º–∞–Ω–¥—ã",
                            "description": "–ü–æ–∫–∞–∂–µ—Ç –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
                        }
                    ]
                }
            ]
        }
    }

    async with aiohttp.ClientSession() as session:
        print(api_url)
        print(chat_id)
        async with session.post(api_url, headers=headers, json=data) as response:
            if response.status == 200:
                print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                return await response.json()
            else:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –°—Ç–∞—Ç—É—Å: {response.status}")
                print(await response.text())
                return None


async def send_interactive_orderInfo_async(api_url, access_token, chat_id, text):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    :param api_url: str - URL API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :param access_token: str - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API.
    :param chat_id: str - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param text: str - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param buttons: list - –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫. –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏: "id" –∏ "title".
    """
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }

    data = {
        "type": "text",
        "message": {
            "text": text
        }
    }

    async with aiohttp.ClientSession() as session:
        print(api_url)
        print(chat_id)
        async with session.post(api_url, headers=headers, json=data) as response:
            if response.status == 200:
                print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                return await response.json()
            else:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –°—Ç–∞—Ç—É—Å: {response.status}")
                print(await response.text())
                return None


async def send_Location_async(api_url, access_token, chat_id, text):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    :param api_url: str - URL API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :param access_token: str - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API.
    :param chat_id: str - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param text: str - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param buttons: list - –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫. –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏: "id" –∏ "title".
    """
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }

    data = {
        "type": "interactive",
        "message": {
            "type": "location_request_message",
            "text": "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–µ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π"
        }
    }

    async with aiohttp.ClientSession() as session:
        print(api_url)
        print(chat_id)
        async with session.post(api_url, headers=headers, json=data) as response:
            if response.status == 200:
                print("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                return await response.json()
            else:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –°—Ç–∞—Ç—É—Å: {response.status}")
                print(await response.text())
                return None
