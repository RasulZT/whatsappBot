import asyncio

from config import *
from core.utils import send_interactive_orderInfo_async, send_interactive_message_async, \
    send_interactive_message_end_async, send_interactive_message_between_async, send_Location_async


async def handle_order_update(message_data):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.
    """
    order_id = message_data.get("order_id")
    chat_id = message_data.get("telegram_id")
    changes = message_data.get("changes", {})
    url = f"{API_URL}"
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    new_status = changes.get("status", None)
    if new_status == "active":
        await send_interactive_orderInfo_async(

            api_url=f"{API_URL}chat/{chat_id}/send-message",
            access_token=Bearer_token,
            chat_id=chat_id,
            text="–ú—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—à–µ–π –æ–ø–ª–∞—Ç—ã. –ü—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –≥–æ—Ç–æ–≤–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞"
        )


    elif new_status == "on_delivery":
        await send_interactive_orderInfo_async(

            api_url=f"{API_URL}chat/{chat_id}/send-message",
            access_token=Bearer_token,
            chat_id=chat_id,
            text="–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∏ –ø–µ—Ä–µ–¥–∞–Ω —Å–ª—É–∂–±–µ –¥–æ—Å—Ç–∞–≤–∫–∏."
        )
    elif new_status == "rejected":
        await send_interactive_orderInfo_async(

            api_url=f"{API_URL}chat/{chat_id}/send-message",
            access_token=Bearer_token,
            chat_id=chat_id,
            text="–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω, —Å–≤—è–∂–∏—Ç–∏—Å —Å –º—ç–Ω–µ–¥–∂–µ—Ä–æ–º —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É."
        )
    elif new_status == "inactive":
        await send_interactive_orderInfo_async(

            api_url=f"{API_URL}chat/{chat_id}/send-message",
            access_token=Bearer_token,
            chat_id=chat_id,
            text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–∫—É–ø–∫–æ–π. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞."
        )
        await send_interactive_message_end_async(
            api_url=f"{API_URL}chat/{chat_id}/send-message",
            access_token=Bearer_token,
            chat_id=chat_id
        )


    else:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id}: {new_status}")


async def handle_order_create(message_data):
    order_data = message_data.get('order_data', {})
    order_id = order_data.get('order_id')
    chat_id = order_data.get('client_id')

    await send_interactive_orderInfo_async(

        api_url=f"{API_URL}chat/{chat_id}/send-message",
        access_token=Bearer_token,
        chat_id=chat_id,
        text=f"–í–∞—à –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ - {order_id}. –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Åüòä"
    )

    await asyncio.sleep(1)

    await send_Location_async(api_url=f"{API_URL}chat/{chat_id}/send-message",
                              access_token=Bearer_token,
                              chat_id=chat_id, text="")
    ###


    await send_interactive_message_between_async(
        api_url=f"{API_URL}chat/{chat_id}/send-message",
        access_token=Bearer_token,
        chat_id=chat_id
    )


async def notify_manager_about_active_order(order_id):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –∞–∫—Ç–∏–≤–µ–Ω.
    """
    print(f"–£–≤–µ–¥–æ–º–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ {order_id} –∞–∫—Ç–∏–≤–µ–Ω.")
    # –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É
